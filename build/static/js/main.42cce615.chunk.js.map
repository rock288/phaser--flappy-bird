{"version":3,"sources":["App.js","reportWebVitals.js","scene/BaseScene.js","scene/PlayScene.js","scene/MenuScene.js","Control.js","scene/PreloadScene.js","scene/ScoreScene.js","scene/PauseScene.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BaseScene","key","config","screenCenter","width","height","fontSize","lineHeight","fontOptions","fill","this","add","image","setOrigin","canGoBack","setScale","setInteractive","on","scene","start","menu","setupMenuEvents","lastMenuPositionY","forEach","menuItem","menuPosition","textGO","text","Phaser","Scene","PlayScene","bird","pipes","flapVelocity","pipeVerticalDistanceRange","pipeHorizontalDistanceRange","score","bestScore","scoreText","bestScoreText","isPaused","difficulties","easy","normal","hard","titan","load","spritesheet","frameWidth","frameHeight","currentDifficulty","createBird","createPipes","createColliders","createScore","createPause","handleInput","listenToEvents","anims","create","frames","generateFrameNumbers","end","frameRate","repeat","play","checkGameStatus","recyclePipes","pauseEvent","events","initialTime","countDownText","timeEvent","time","addEvent","delay","callback","countDown","callbackScope","loop","setText","physics","resume","remove","getBounds","bottom","y","gameOver","sprite","startPosition","x","setFlipX","setBodySize","body","gravity","setCollideWorldBounds","group","i","upperPipe","setImmovable","lowerPipe","placePipe","setVelocityX","localStorage","getItem","pause","launch","collider","input","flap","keyboard","velocity","uPipe","lPipe","difficulty","rightMostX","getRightMostPipe","pipeVerticalDistance","Math","Between","pipeHorizontalDistance","pipeVerticalPosition","getChildren","pipe","max","parseInt","setItem","setTint","saveBestScore","restart","tempPipes","right","push","length","increaseScore","increaseDifficulty","MenuScene","setStyle","createMenu","Scenes","stop","SHARE_CONFIG","WIDTH","HEIGHT","type","AUTO","pixelArt","default","arcade","map","Game","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42cce615.chunk.js","sourcesContent":["function App() {\n  return <div></div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Phaser from 'phaser';\n\nclass BaseScene extends Phaser.Scene {\n  constructor(key, config) {\n    super(key);\n    this.config = config;\n    this.screenCenter = [config.width / 2, config.height / 2];\n    this.fontSize = 23;\n    this.lineHeight = 42;\n    this.fontOptions = { fontSize: `${this.fontSize}px`, fill: '#fff' };\n  }\n\n  create() {\n    this.add.image(0, 0, 'sky').setOrigin(0);\n\n    if (this.config.canGoBack) {\n      const backButton = this.add\n        .image(this.config.width - 10, this.config.height - 10, 'back')\n        .setOrigin(1)\n        .setScale(2)\n        .setInteractive();\n\n      backButton.on('pointerup', () => {\n        this.scene.start('MenuScene');\n      });\n    }\n  }\n\n  createMenu(menu, setupMenuEvents) {\n    let lastMenuPositionY = -30;\n\n    menu.forEach((menuItem) => {\n      const menuPosition = [this.screenCenter[0], this.screenCenter[1] + lastMenuPositionY];\n      lastMenuPositionY += this.lineHeight;\n\n      menuItem.textGO = this.add\n        .text(...menuPosition, menuItem.text, this.fontOptions)\n        .setOrigin(0.5, 1);\n      setupMenuEvents(menuItem);\n    });\n  }\n}\n\nexport default BaseScene;\n","import Phaser from 'phaser';\nimport BaseScene from './BaseScene';\n\nconst PIPES_TO_RENDER = 4;\n\nclass PlayScene extends BaseScene {\n  constructor(config) {\n    super('PlayScene', config);\n    this.bird = null;\n    this.pipes = null;\n    this.flapVelocity = 220;\n    this.pipeVerticalDistanceRange = [150, 250];\n    this.pipeHorizontalDistanceRange = [350, 500];\n    this.score = 0;\n    this.bestScore = 0;\n    this.scoreText = '';\n    this.bestScoreText = '';\n    this.isPaused = false;\n    this.difficulties = {\n      easy: {\n        pipeHorizontalDistanceRange: [300, 400],\n        pipeVerticalDistanceRange: [150, 200],\n      },\n      normal: {\n        pipeHorizontalDistanceRange: [280, 370],\n        pipeVerticalDistanceRange: [140, 190],\n      },\n      hard: {\n        pipeHorizontalDistanceRange: [250, 350],\n        pipeVerticalDistanceRange: [85, 120],\n      },\n      titan: {\n        pipeHorizontalDistanceRange: [230, 300],\n        pipeVerticalDistanceRange: [50, 100],\n      },\n    };\n  }\n\n  preload() {\n    this.load.image('sky', 'assets/sky.png');\n    this.load.spritesheet('bird', 'assets/birdSprite.png', {\n      frameWidth: 16,\n      frameHeight: 16,\n    });\n    this.load.image('pipe', 'assets/pipe.png');\n    this.load.image('pause', 'assets/pause.png');\n  }\n\n  create() {\n    this.currentDifficulty = 'easy';\n    super.create();\n    this.createBird();\n    this.createPipes();\n    this.createColliders();\n\n    this.createScore();\n    this.createPause();\n    this.handleInput();\n    this.listenToEvents();\n\n    this.anims.create({\n      key: 'fly',\n      frames: this.anims.generateFrameNumbers('bird', { start: 8, end: 15 }),\n      frameRate: 8,\n      repeat: -1,\n    });\n\n    this.bird.play('fly');\n  }\n\n  update() {\n    this.checkGameStatus();\n    this.recyclePipes();\n  }\n\n  listenToEvents() {\n    if (this.pauseEvent) {\n      return;\n    }\n\n    this.pauseEvent = this.events.on('resume', () => {\n      this.initialTime = 3;\n      this.countDownText = this.add.text(\n        ...this.screenCenter,\n        'Fly in: ' + this.initialTime,\n        this.fontOptions\n      );\n      this.timeEvent = this.time.addEvent({\n        delay: 1000,\n        callback: this.countDown,\n        callbackScope: this,\n        loop: true,\n      });\n    });\n  }\n\n  countDown() {\n    this.initialTime--;\n    this.countDownText.setText('Fly in: ' + this.initialTime);\n    if (this.initialTime <= 0) {\n      this.isPaused = false;\n      this.countDownText.setText('');\n      this.physics.resume();\n      this.timeEvent.remove();\n    }\n  }\n\n  checkGameStatus() {\n    if (this.bird.getBounds().bottom >= this.config.height || this.bird.y <= 0) {\n      this.gameOver();\n    }\n  }\n\n  createBG() {\n    this.add.image(0, 0, 'sky').setOrigin(0, 0);\n  }\n\n  createBird() {\n    this.bird = this.physics.add\n      .sprite(this.config.startPosition.x, this.config.startPosition.y, 'bird')\n      .setFlipX(true)\n      .setOrigin(0, 0)\n      .setScale(2);\n\n    this.bird.setBodySize(this.bird.width - 5, this.bird.height - 6);\n    this.bird.body.gravity.y = 400;\n    this.bird.setCollideWorldBounds(true);\n  }\n\n  createPipes() {\n    this.pipes = this.physics.add.group();\n\n    for (let i = 0; i < PIPES_TO_RENDER; i++) {\n      const upperPipe = this.pipes.create(0, 0, 'pipe').setImmovable(true).setOrigin(0, 1);\n      const lowerPipe = this.pipes.create(0, 0, 'pipe').setImmovable(true).setOrigin(0, 0);\n\n      this.placePipe(upperPipe, lowerPipe);\n    }\n\n    this.pipes.setVelocityX(-200);\n  }\n\n  createScore() {\n    this.score = 0;\n    this.scoreText = this.add.text(16, 16, `Score: ${0}`, { fontSize: '23px', fill: '#000' });\n\n    const bestScore = localStorage.getItem('bestScore');\n    this.bestScoreText = this.add.text(16, 45, `Best score: ${bestScore || 0}`, {\n      fontSize: '14px',\n      fill: '#000',\n    });\n  }\n\n  createPause() {\n    this.isPaused = false;\n\n    const pauseButton = this.add\n      .image(this.config.width - 10, this.config.height - 10, 'pause')\n      .setInteractive()\n      .setScale(3)\n      .setOrigin(1);\n\n    pauseButton.on('pointerdown', () => {\n      this.isPaused = true;\n      this.physics.pause();\n      this.scene.pause();\n      this.scene.launch('PauseScene');\n    });\n  }\n\n  createColliders() {\n    this.physics.add.collider(this.bird, this.pipes, this.gameOver, null, this);\n  }\n\n  handleInput() {\n    this.input.on('pointerdown', this.flap, this);\n\n    this.input.keyboard.on('keydown_SPACE', this.flap, this);\n  }\n\n  flap() {\n    if (this.isPaused) {\n      return;\n    }\n    this.bird.body.velocity.y = -this.flapVelocity;\n  }\n\n  placePipe(uPipe, lPipe) {\n    const difficulty = this.difficulties[this.currentDifficulty];\n    const rightMostX = this.getRightMostPipe();\n    const pipeVerticalDistance = Phaser.Math.Between(...difficulty.pipeVerticalDistanceRange);\n    const pipeHorizontalDistance = Phaser.Math.Between(...difficulty.pipeHorizontalDistanceRange);\n    const pipeVerticalPosition = Phaser.Math.Between(\n      0 + 30,\n      this.config.height - 30 - pipeVerticalDistance\n    );\n\n    uPipe.x = rightMostX + pipeHorizontalDistance;\n    uPipe.y = pipeVerticalPosition;\n\n    lPipe.x = uPipe.x;\n    lPipe.y = uPipe.y + pipeVerticalDistance;\n  }\n\n  getRightMostPipe() {\n    let rightMostX = 0;\n\n    this.pipes.getChildren().forEach((pipe) => {\n      rightMostX = Math.max(pipe.x, rightMostX);\n    });\n\n    return rightMostX;\n  }\n\n  saveBestScore() {\n    const bestScoreText = localStorage.getItem('bestScore');\n\n    const bestScore = bestScoreText && parseInt(bestScoreText, 10);\n\n    if (!bestScore || this.score > bestScore) {\n      localStorage.setItem('bestScore', this.score);\n    }\n  }\n\n  gameOver() {\n    this.physics.pause();\n    this.bird.setTint(0xee4824);\n\n    this.saveBestScore();\n\n    this.time.addEvent({\n      delay: 1000,\n      callback: () => {\n        this.scene.restart();\n      },\n      loop: false,\n    });\n  }\n\n  recyclePipes() {\n    const tempPipes = [];\n    this.pipes.getChildren().forEach((pipe) => {\n      if (pipe.getBounds().right <= 0) {\n        tempPipes.push(pipe);\n        if (tempPipes.length === 2) {\n          this.placePipe(...tempPipes);\n          this.increaseScore();\n          this.saveBestScore();\n          this.increaseDifficulty();\n        }\n      }\n    });\n  }\n\n  increaseDifficulty() {\n    if (this.score === 30) {\n      this.currentDifficulty = 'normal';\n    }\n\n    if (this.score === 60) {\n      this.currentDifficulty = 'hard';\n    }\n\n    if (this.score === 80) {\n      this.currentDifficulty = 'titan';\n    }\n  }\n\n  increaseScore() {\n    this.score++;\n    this.scoreText.setText(`Score: ${this.score}`);\n  }\n}\n\nexport default PlayScene;\n","import Phaser from 'phaser';\nimport BaseScene from './BaseScene';\n\nclass MenuScene extends BaseScene {\n  constructor(config) {\n    super('MenuScene', config);\n\n    this.menu = [\n      { scene: 'PlayScene', text: 'Play' },\n      { scene: 'ScoreScene', text: 'Score' },\n      // { scene: null, text: 'Exit' },\n    ];\n  }\n\n  create() {\n    super.create();\n\n    this.createMenu(this.menu, this.setupMenuEvents);\n  }\n\n  setupMenuEvents = (menuItem) => {\n    const textGO = menuItem.textGO;\n    textGO.setInteractive();\n\n    textGO.on('pointerover', () => {\n      textGO.setStyle({ fill: '#ff0' });\n    });\n\n    textGO.on('pointerout', () => {\n      textGO.setStyle({ fill: '#fff' });\n    });\n\n    textGO.on('pointerup', () => {\n      menuItem && this.scene.start(menuItem.scene);\n    });\n  };\n}\n\nexport default MenuScene;\n","import Phaser from 'phaser';\nimport PlayScene from './scene/PlayScene';\nimport MenuScene from './scene/MenuScene';\nimport PreloadScene from './scene/PreloadScene';\nimport ScoreScene from './scene/ScoreScene';\nimport PauseScene from './scene/PauseScene';\n\nconst WIDTH = 400;\nconst HEIGHT = 600;\nconst BIRD_POSITION = { x: WIDTH * 0.1, y: HEIGHT / 2 };\n\nconst Scenes = [PreloadScene, MenuScene, ScoreScene, PlayScene, PauseScene];\n\nconst initScenes = () => Scenes.map((Scene) => new Scene(SHARE_CONFIG));\n\nconst SHARE_CONFIG = {\n  width: WIDTH,\n  height: HEIGHT,\n  startPosition: BIRD_POSITION,\n};\n\nconst config = {\n  type: Phaser.AUTO,\n  ...SHARE_CONFIG,\n  pixelArt: true,\n  physics: {\n    default: 'arcade',\n    arcade: {\n      // debug: true,\n    },\n  },\n  scene: initScenes(),\n};\n\nnew Phaser.Game(config);\n","import Phaser from 'phaser';\n\nclass PreloadScene extends Phaser.Scene {\n  constructor(config) {\n    super('PreloadScene');\n  }\n\n  preload() {\n    this.load.image('sky', 'assets/sky.png');\n    // this.load.image('bird', 'assets/bird.png');\n    this.load.image('pipe', 'assets/pipe.png');\n    this.load.image('pause', 'assets/pause.png');\n    this.load.image('back', 'assets/back.png');\n  }\n\n  create() {\n    this.add.image(0, 0, 'sky').setOrigin(0);\n    this.scene.start('MenuScene');\n  }\n}\n\nexport default PreloadScene;\n","import Phaser from 'phaser';\nimport BaseScene from './BaseScene';\n\nclass MenuScene extends BaseScene {\n  constructor(config) {\n    super('ScoreScene', { ...config, canGoBack: true });\n  }\n\n  create() {\n    super.create();\n\n    const bestScore = localStorage.getItem('bestScore');\n    this.add\n      .text(...this.screenCenter, `Best Score: ${bestScore || 0}`, this.fontOptions)\n      .setOrigin(0.5);\n  }\n}\n\nexport default MenuScene;\n","import Phaser from 'phaser';\nimport BaseScene from './BaseScene';\n\nclass PauseScene extends BaseScene {\n  constructor(config) {\n    super('PauseScene', config);\n\n    this.menu = [\n      { scene: 'PlayScene', text: 'Continue' },\n      { scene: 'MenuScene', text: 'Exit' },\n    ];\n  }\n\n  create() {\n    super.create();\n\n    this.createMenu(this.menu, this.setupMenuEvents);\n  }\n\n  setupMenuEvents = (menuItem) => {\n    const textGO = menuItem.textGO;\n    textGO.setInteractive();\n\n    textGO.on('pointerover', () => {\n      textGO.setStyle({ fill: '#ff0' });\n    });\n\n    textGO.on('pointerout', () => {\n      textGO.setStyle({ fill: '#fff' });\n    });\n\n    textGO.on('pointerup', () => {\n      if (menuItem.scene && menuItem.text === 'Continue') {\n        this.scene.stop();\n        this.scene.resume(menuItem.scene);\n      } else {\n        this.scene.stop('PlayScene');\n        this.scene.stop(menuItem.scene);\n      }\n    });\n  };\n}\n\nexport default PauseScene;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Control from './Control';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}